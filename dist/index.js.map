{"version":3,"file":"index.js","sources":["../src/Calculator/styles.ts","../src/Calculator/toast.ts","../src/Calculator/index.tsx"],"sourcesContent":["import { StyleSheet } from \"react-native\";\n\nconst styles = StyleSheet.create({\n  container: {},\n  row: {\n    flexDirection: \"row\",\n  },\n  eachButton: {\n    flex: 1,\n    padding: 12,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    margin: 6,\n    borderRadius: 12,\n    backgroundColor: \"#542e71\",\n  },\n  value: {\n    color: \"#ffffff\",\n    fontWeight: \"bold\",\n  },\n});\n\nexport default styles;\n","import { Platform, ToastAndroid, Alert } from \"react-native\";\n\nconst showMessage = (message: string, type: \"success\" | \"danger\") => {\n  if (Platform.OS === \"android\") {\n    ToastAndroid.showWithGravity(\n      message,\n      ToastAndroid.SHORT,\n      ToastAndroid.BOTTOM\n    );\n  } else {\n    Alert.alert(type === \"success\" ? \"Success!\" : \"Failed!\", message);\n  }\n};\n\nconst showError = (message: string) => {\n  showMessage(message, \"danger\");\n};\n\nexport { showError };\n","import React, { useCallback } from \"react\";\nimport { View, TouchableOpacity, Text } from \"react-native\";\n\nimport styles from \"./styles\";\nimport { showError } from \"./toast\";\n\nconst buttons: Array<{ row: number; elements: Array<string> }> = [\n  { row: 1, elements: [\"AC\", \"/\", \"*\", \"DEL\"] },\n  { row: 2, elements: [\"1\", \"2\", \"3\", \"-\"] },\n  { row: 3, elements: [\"4\", \"5\", \"6\", \"+\"] },\n  { row: 4, elements: [\"7\", \"8\", \"9\", \".\"] },\n  { row: 5, elements: [\"0\", \"=\"] },\n];\n\nconst operator: Array<string> = [\"/\", \"+\", \"-\", \"*\", \"=\", \".\"];\n\ninterface Props {\n  displayValue: string;\n  updateDisplayValue: (val: string) => void;\n}\n\nconst Calculator = ({ displayValue, updateDisplayValue }: Props) => {\n  const handlePress = useCallback(\n    (value: string) => {\n      switch (value) {\n        case \"AC\":\n          // Clears the screen.\n          updateDisplayValue(\"\");\n          return;\n        case \"DEL\":\n          if (displayValue) {\n            // Removes the last element.\n            const temp = displayValue.slice(0, -1);\n            updateDisplayValue(temp);\n          }\n          return;\n        case \"=\":\n          if (displayValue) {\n            if (operator.includes(displayValue.slice(-1))) {\n              // Last element cannot be an operator.\n              showError(\"Please, complete the expression.\");\n              return;\n            }\n            if (!operator.some((el) => displayValue.includes(el))) {\n              // if the expression doesn't contain any operator, no need to calculate.\n              return;\n            }\n            // eval does the mathematical expression's calculation.\n            //[ALERT] eval is dangerous. It needs to be checked very well before production.\n            // eslint-disable-next-line no-eval\n            const result = String(eval(displayValue));\n            if (result === \"Infinity\") {\n              showError(\"Inifity result are not allowded.\");\n              return;\n            }\n            updateDisplayValue(result);\n          }\n          return;\n        default:\n          if (!displayValue && operator.includes(value)) {\n            // First element can't be an operator.\n            return;\n          }\n          if (\n            operator.includes(displayValue.slice(-1)) &&\n            operator.includes(value)\n          ) {\n            // Two operators cannot be consecutive.\n            return;\n          }\n          if (displayValue.includes(\".\") && value === \".\") {\n            // If a decimal is already present in the display, another decimal can only be added if an operator separates it as part of a different number.\n            const decimalIndex = displayValue.lastIndexOf(\".\");\n            let operatorExceptDecimalIndex = 0;\n            operator.forEach((el) => {\n              if (el === \".\" || el === \"=\") {\n                return;\n              }\n              const temp = displayValue.lastIndexOf(el);\n              if (temp > operatorExceptDecimalIndex) {\n                operatorExceptDecimalIndex = temp;\n              }\n            });\n            if (operatorExceptDecimalIndex < decimalIndex) {\n              return;\n            }\n          }\n          updateDisplayValue(displayValue + value);\n      }\n    },\n    [displayValue, updateDisplayValue]\n  );\n\n  return (\n    <View style={styles.container}>\n      {buttons.map((el) => (\n        <View key={el.row} style={styles.row}>\n          {el.elements.map((value) => (\n            <TouchableOpacity\n              key={value}\n              style={styles.eachButton}\n              onPress={() => handlePress(value)}\n            >\n              <Text style={styles.value}>{value}</Text>\n            </TouchableOpacity>\n          ))}\n        </View>\n      ))}\n    </View>\n  );\n};\n\nexport default Calculator;\n"],"names":["styles","StyleSheet","create","container","row","flexDirection","eachButton","flex","padding","justifyContent","alignItems","margin","borderRadius","backgroundColor","value","color","fontWeight","showMessage","message","type","Platform","OS","ToastAndroid","showWithGravity","SHORT","BOTTOM","Alert","alert","showError","buttons","elements","operator","Calculator","_ref","displayValue","updateDisplayValue","handlePress","useCallback","temp","slice","includes","some","el","result","String","eval","decimalIndex","lastIndexOf","operatorExceptDecimalIndex","forEach","React","createElement","View","style","map","key","TouchableOpacity","onPress","Text"],"mappings":";;;;;AAEA,IAAMA,MAAM,GAAGC,sBAAU,CAACC,MAAM,CAAC;EAC/BC,SAAS,EAAE,EAAE;AACbC,EAAAA,GAAG,EAAE;AACHC,IAAAA,aAAa,EAAE;GAChB;AACDC,EAAAA,UAAU,EAAE;AACVC,IAAAA,IAAI,EAAE,CAAC;AACPC,IAAAA,OAAO,EAAE,EAAE;AACXC,IAAAA,cAAc,EAAE,QAAQ;AACxBC,IAAAA,UAAU,EAAE,QAAQ;AACpBC,IAAAA,MAAM,EAAE,CAAC;AACTC,IAAAA,YAAY,EAAE,EAAE;AAChBC,IAAAA,eAAe,EAAE;GAClB;AACDC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE,SAAS;AAChBC,IAAAA,UAAU,EAAE;AACb;AACF,CAAA,CAAC;;AClBF,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAIC,OAAe,EAAEC,IAA0B,EAAI;AAClE,EAAA,IAAIC,oBAAQ,CAACC,EAAE,KAAK,SAAS,EAAE;AAC7BC,IAAAA,wBAAY,CAACC,eAAe,CAC1BL,OAAO,EACPI,wBAAY,CAACE,KAAK,EAClBF,wBAAY,CAACG,MAAM,CACpB;AACH,GAAC,MAAM;AACLC,IAAAA,iBAAK,CAACC,KAAK,CAAmC,SAAS,EAAET,OAAO,CAAC;AACnE;AACF,CAAC;AAED,IAAMU,SAAS,GAAG,SAAZA,SAASA,CAAIV,OAAe,EAAI;AACpCD,EAAAA,WAAW,CAACC,OAAiB,CAAC;AAChC,CAAC;;ACVD,IAAMW,OAAO,GAAoD,CAC/D;AAAEzB,EAAAA,GAAG,EAAE,CAAC;EAAE0B,QAAQ,EAAE,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK;AAAG,CAAA,EAC7C;AAAE1B,EAAAA,GAAG,EAAE,CAAC;EAAE0B,QAAQ,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;AAAG,CAAA,EAC1C;AAAE1B,EAAAA,GAAG,EAAE,CAAC;EAAE0B,QAAQ,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;AAAG,CAAA,EAC1C;AAAE1B,EAAAA,GAAG,EAAE,CAAC;EAAE0B,QAAQ,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;AAAG,CAAA,EAC1C;AAAE1B,EAAAA,GAAG,EAAE,CAAC;AAAE0B,EAAAA,QAAQ,EAAE,CAAC,GAAG,EAAE,GAAG;AAAG,CAAA,CACjC;AAED,IAAMC,QAAQ,GAAkB,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;AAO9D,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAAC,IAAA,EAAmD;AAAA,EAAA,IAA7CC,YAAY,GAAAD,IAAA,CAAZC,YAAY;IAAEC,kBAAkB,GAAAF,IAAA,CAAlBE,kBAAkB;AACpD,EAAA,IAAMC,WAAW,GAAGC,iBAAW,CAC7B,UAACvB,KAAa,EAAI;AAChB,IAAA,QAAQA,KAAK;AACX,MAAA,KAAK,IAAI;AACP;QACAqB,kBAAkB,CAAC,EAAE,CAAC;AACtB,QAAA;AACF,MAAA,KAAK,KAAK;AACR,QAAA,IAAID,YAAY,EAAE;AAChB;UACA,IAAMI,IAAI,GAAGJ,YAAY,CAACK,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;UACtCJ,kBAAkB,CAACG,IAAI,CAAC;AAC1B;AACA,QAAA;AACF,MAAA,KAAK,GAAG;AACN,QAAA,IAAIJ,YAAY,EAAE;AAChB,UAAA,IAAIH,QAAQ,CAACS,QAAQ,CAACN,YAAY,CAACK,KAAK,CAAC,EAAE,CAAC,CAAC,EAAE;AAC7C;YACAX,SAAS,CAAC,kCAAkC,CAAC;AAC7C,YAAA;AACF;AACA,UAAA,IAAI,CAACG,QAAQ,CAACU,IAAI,CAAC,UAACC,EAAE,EAAA;AAAA,YAAA,OAAKR,YAAY,CAACM,QAAQ,CAACE,EAAE,CAAC;AAAA,WAAA,CAAC,EAAE;AACrD;AACA,YAAA;AACF;AACA;AACA;AACA;UACA,IAAMC,MAAM,GAAGC,MAAM,CAACC,IAAI,CAACX,YAAY,CAAC,CAAC;UACzC,IAAIS,MAAM,KAAK,UAAU,EAAE;YACzBf,SAAS,CAAC,kCAAkC,CAAC;AAC7C,YAAA;AACF;UACAO,kBAAkB,CAACQ,MAAM,CAAC;AAC5B;AACA,QAAA;AACF,MAAA;QACE,IAAI,CAACT,YAAY,IAAIH,QAAQ,CAACS,QAAQ,CAAC1B,KAAK,CAAC,EAAE;AAC7C;AACA,UAAA;AACF;AACA,QAAA,IACEiB,QAAQ,CAACS,QAAQ,CAACN,YAAY,CAACK,KAAK,CAAC,EAAE,CAAC,CAAC,IACzCR,QAAQ,CAACS,QAAQ,CAAC1B,KAAK,CAAC,EACxB;AACA;AACA,UAAA;AACF;QACA,IAAIoB,YAAY,CAACM,QAAQ,CAAC,GAAG,CAAC,IAAI1B,KAAK,KAAK,GAAG,EAAE;AAC/C;AACA,UAAA,IAAMgC,YAAY,GAAGZ,YAAY,CAACa,WAAW,CAAC,GAAG,CAAC;UAClD,IAAIC,0BAA0B,GAAG,CAAC;AAClCjB,UAAAA,QAAQ,CAACkB,OAAO,CAAC,UAACP,EAAE,EAAI;AACtB,YAAA,IAAIA,EAAE,KAAK,GAAG,IAAIA,EAAE,KAAK,GAAG,EAAE;AAC5B,cAAA;AACF;AACA,YAAA,IAAMJ,IAAI,GAAGJ,YAAY,CAACa,WAAW,CAACL,EAAE,CAAC;YACzC,IAAIJ,IAAI,GAAGU,0BAA0B,EAAE;AACrCA,cAAAA,0BAA0B,GAAGV,IAAI;AACnC;AACF,WAAC,CAAC;UACF,IAAIU,0BAA0B,GAAGF,YAAY,EAAE;AAC7C,YAAA;AACF;AACF;AACAX,QAAAA,kBAAkB,CAACD,YAAY,GAAGpB,KAAK,CAAC;AAC5C;AACF,GAAC,EACD,CAACoB,YAAY,EAAEC,kBAAkB,CAAC,CACnC;AAED,EAAA,oBACEe,KAAA,CAAAC,aAAA,CAACC,gBAAI,EAAA;IAACC,KAAK,EAAErD,MAAM,CAACG;AAAU,GAAA,EAC3B0B,OAAO,CAACyB,GAAG,CAAC,UAACZ,EAAE,EAAA;AAAA,IAAA,oBACdQ,KAAA,CAAAC,aAAA,CAACC,gBAAI,EAAA;MAACG,GAAG,EAAEb,EAAE,CAACtC,GAAI;MAACiD,KAAK,EAAErD,MAAM,CAACI;AAAI,KAAA,EAClCsC,EAAE,CAACZ,QAAQ,CAACwB,GAAG,CAAC,UAACxC,KAAK,EAAA;AAAA,MAAA,oBACrBoC,KAAA,CAAAC,aAAA,CAACK,4BAAgB,EAAA;AACfD,QAAAA,GAAG,EAAEzC,KAAM;QACXuC,KAAK,EAAErD,MAAM,CAACM,UAAW;QACzBmD,OAAO,EAAE,SAATA,OAAOA,GAAA;UAAA,OAAQrB,WAAW,CAACtB,KAAK,CAAC;AAAA;AAAC,OAAA,eAElCoC,KAAA,CAAAC,aAAA,CAACO,gBAAI,EAAA;QAACL,KAAK,EAAErD,MAAM,CAACc;OAAQA,EAAAA,KAAY,CACxB,CAAC;AAAA,KACpB,CACG,CAAC;AAAA,GACR,CACG,CAAC;AAEX;;;;"}